<% cache(:action => 'show', :action_suffix => 'survey') do %>
<div id="survey_header">
	<%= render :partial => 'surveys/survey_header' %>
</div>
<br/>

<div id='draft-message' style='color:red;'></div>
<div id="survey_fast_input" class="command"></div>
<br/>


<form action="/survey_answers/create/0" id="surveyform" method="post" >
	<!-- Put before validation.add -->
	<script type='text/javascript'>
	   new Validation('surveyform', {immediate : true, stopOnFirst : true });
	</script>
	<div>
			Udfyldt af <%= select :answer, :person, @survey.answer_by %>
			Hvis andet, skriv hvem: <input type='text' id='answer_person_other' name='answer[person_other]' />
	</div>
	<br/>
	<%= render :partial => "surveys/question", :collection => @survey.questions %>
	<div id="submit_button" style="display:none;">
		<%= render :partial => 'surveys/fancy_submit_button' %>
	</div>
</form>

<p/> <!-- dynamic -->
	<div id="back_button" style="display:none;"></div>

<script type="text/javascript">
Event.observe(window, 'load', function() {
	// do not add submit button when it's show only
	var doNotCall = document.location.href.match(/show_only/);
	if(doNotCall == null) {
		var val = /([0-9]+)$/;
  	var matches = document.location.href.match(val);
		var params = {};
		params['id'] = matches[1];
		var save_interval = 60;
		// if there's no cookie, the id in URL is a journal_entry (else a survey_id), and thus not answered by a login user
		var journal_entry = document.cookies().get('journal_entry');
		if(!(typeof(journal_entry) == "undefined")) {
			params['id'] = journal_entry;
			// alert("Only for login user: " + params['id']);
			// save_interval = 300;
		// }
		// else { // no save_draft for login users 
			//<![CDATA[
			var save_draft_url = '/survey_answers/save_draft/' + params['id'];
			new Form.Observer('surveyform', save_interval, function(element, value) {new Ajax.Updater('draft-message', save_draft_url, {asynchronous:true, evalScripts:true, parameters:value});});
			//]]>
		}
		new Ajax.Request("/survey_answers/draft_data/" + params['id'], {
		  method: 'post',
			parameters: params,
			contentType: "text/javascript",
			evalJS: true,
		  onSuccess: function(transport) {
				eval(transport.responseText);
				// alert("Yes, I did it!");
		  }
		});
		get_dynamic_fragments("/survey_answers/dynamic_data", params);
		
		// set form action to this journal_entry
		changeAction('surveyform', '/survey_answers/create/' + params['id']);
	}
});
</script>
<% end %>
</script>