<div class="container">
	<div id="infoheader" class="prepend-1 span-23">
	<div id='centertitle' class="span-22"><%= @center_title %></div>
</div>
<div class="span24">&nbsp;</div>
<br/>

<% cache(:action => 'show', :action_suffix => 'survey') do %>
<%- if @is_login_user %>
	<div id="survey_header">
		<div class="survey" style='background-color: #<%= @survey.color %>;'>
			<div id="survey_journal_info">
				<%# render :partial => 'surveys/survey_header_info' %>
			</div>
			<div class="surveyname"><%= @survey.title %></div>
		</div>
	</div>
	<%- else %>
	<%# back_button journal_path(@journal_entry) %>
	<div id="back_button"></div>
	<div id="survey_header">
		<div class="survey" style='background-color: #<%= @survey.color %>;'>
			<div id="survey_journal_info">
				<%= render :partial => 'surveys/survey_header_info' %>
			</div>
			<div class="surveyname"><%= @survey.title %></div>
		</div>
	</div>
<%- end %>
<br>

<br/>


	<div id='draft-message' style='color:red;'></div>
	<div id="survey_fast_input" class="command" style="display:none;">
		<a href="/surveys/show_fast/" class="button" title="Besvar med hurtig indtastning"><span class="survey_fast_input">Hurtig indtastning</span></a>
	</div>
	<br/>


	<form action="/survey_answers/create/0" id="surveyform" method="post" >
		<!-- Put before validation.add -->
		<script type='text/javascript'>
			// new Validation('surveyform', {immediate : true, stopOnFirst : true });
		</script>
		<div class='span-24'>
			<span class="prepend-1 span-4">Udfyldt af <%= select :answer, :person, @survey.answer_by %></span>
			<span class="span-8 last" >Hvis andet, skriv hvem: <input type='text' id='answer_person_other' name='answer[person_other]' /></span>
		</div>
		<br/>
		<%= render :partial => "surveys/question", :collection => @survey.questions %>

		<div id="submit_button" style="display:none; padding-top: 15px;">
			<a class='button' style="padding-top: 5px;" id='send_form'>
				<span onclick="submitPressed = true; document.forms[0].submit(); $('send_form').hide(); $('save_draft').hide(); $('sending_form').show();">Send svar</span>
			</a>
		<div id="sending_form" style="display: none;">
			<a class='send_form button' href='#'>
				<span class="send_survey">Sender svar...</span>
			</a>
		</div>
		
		<script type="text/javascript">
			var submitPressed = false;
		</script>
			<span style="padding-left: 100px;">
				<a class='button' id='save_draft' style="display: none;">
					<span id="spinner"><img alt="spinner" src="/images/spinner.gif"></span>
					<span class="survey_save_draft">Gem kladde</span>
				</a>
			</span>
		</div>
	</form>
</div>

<p/> <!-- dynamic -->
	<div id="back_button" style="display:none;">
		<a href="javascript:void(0);" onclick="history.go(-1);" class="button" title="GÃ¥ tilbage">
			<span class="go_back">Tilbage</span></a>
	</div>

<script type="text/javascript">

function setDraftData(d, id) {
	var input_type;
	var val;
	var elem_id
	try {
		for (var i = 0; i < d.length; i++) {
			var obj = d[i];
			input_type = obj.input;
			val = obj.value;
			elem_id = obj.elem;

			if(input_type == "radio") {
				var $radios = $('input:radio[name="' + elem_id + '"]');
				if($radios.is(':checked') === false) {
     			   $radios.filter('[value=' + val + ']').attr('checked', true);
     			}
			}
			else if(input_type == "text") {
				$('#' + elem_id).val(decodeURIComponent(val));
			}
			else {
				$('#' + elem_id).val(val);
			}
		};
	} catch(e) {
		var m = "Id: " + id + " Could not set elem: " + elem_id + " to val: " + val + "  input_type: " + input_type + " " + (new Date().toString());
		logError(e, m, id);
	}
}

function logError(e, message, id) {
	var log_params = {'e' : e.toString(), "message":message}
	$.ajax({
			url: "/errors/log/" + id + ".json?message=" + message, 
			method: "GET",
			dataType: 'json',
			parameters: log_params,
			contentType: "application/json"
		});
}

function initMakeItCount() {
 	// var comments = $('textarea.comment');
  //  	console.log("textarea: " + comments.length);
  //  	for (var i = 0; i < comments.length; i++) {
  //  		makeItCount(comments[i].id, 2000);
  //  	};
}

function hideSpinner() {
	$('#spinner').hide();
	$('#surveyform').effect("highlight", {}, 500); // requires jquery-ui
}

function onReceivedDynamicData(data) {
	if(!data.logged_in) {
	    $('#centertitle').effect("pulsate", {}, 1000); // requires jquery-ui
	    $('#content_survey').effect("blind_up", {}, 1000); // requires jquery-ui
		alert("Du er ikke logget ind. Du bliver sendt til login-siden.");
		location.href = "/login";
	}
	else {
        $('#save_draft').toggle(data.show_save_draft);
        $('#submit_button').toggle(data.show_submit);
        hideSpinner();

        if(!data.login_user) {
   	      	$('#centertitle').html(data.center_title);
	      	$('#journal_code').html(data.journal_code);
    	  	$('#journal_name').html(data.journal_info);
      		$('#journal_birthdate').html(data.birthdate);
	      	$('#journal_info').show();
        	$('#survey_fast_input').show();
        }
    }
}

function auto_save(id, changed_items) {
	// console.log("auto save: " + new Date().toString());
	var params = $('#surveyform').serialize();
	// console.log("params: " + params);
	// console.dir(params);
	$.post('/survey_answers/save_draft/' + id, params)
	.done(function() { $('#surveyform').effect("highlight", {}, 500); });
};

function add_to_changed(arr, e) {
	// console.dir(e);
	var id = e.target.id;
	if(e.type == 'radio') {
		id = id.substring(0, id.length-2);
	}
	arr[id] = e.target.value;
	// console.dir(arr);
};

var changed_items = {};

jQuery(document).ready(function ($) {
	var hasChanged = false;

	var count = 0;

	var timer = $.timer(function() {
			count++;
			// console.log(count);
			if(hasChanged) {
				hasChanged = false;
				timer.reset();
				count = 0;
				auto_save(params['id'], changed_items);
			}
			// $('.count').html(count);
		}, 60000, false); // n seconds

// 	// do not add submit button when it's show only
	var doNotCall = document.location.href.match(/show_only/);

	if(doNotCall == null) {
		var val = /([0-9]+)$/;
		var matches = document.location.href.match(val);
		// console.dir(matches);
		var params = {};

		// if there's no cookie, the id in URL is a journal_entry (else a survey_id), and thus not answered by a login user
		if(matches[1] > 10)
			params['id'] = matches[1];
	
		var journal_entry = $.cookie('journal_entry');
		if((typeof(journal_entry) === "undefined")) {
			alert("Fejl: Kan ikke hente brugerinformation: ");
		}

		var save_draft_url = '/survey_answers/save_draft/0';
		
		if((typeof(journal_entry) !== "undefined")) {
			params['id'] = journal_entry;

			var draft_params = {
					url: "/survey_answers/json_draft_data/" + params['id'] + ".json", 
					method: "GET",
					dataType: 'json',
					parameters: params,
					contentType: "application/json"
				};
			$.ajax(draft_params).done(function(data) {
				// console.log("got draft_data: ");
				setDraftData(data, params['id'] );
				wFORMS.behaviors['switch'].init();
			});
		}

		var set_values_interval = 2;
		save_draft_url = '/survey_answers/save_draft/' + params['id'];
 		// set values in params every 5 seconds, so when clicking save_draft, the values can be saved

		/// observe any changes to input fields, set 
		$('body').on('change', "#surveyform input, #surveyform textarea", function(e) {
			hasChanged = true;
			// console.log("on change input " + new Date().toString() + ' changed: ');
			// console.dir(e.target);
			timer.reset();
			add_to_changed(changed_items, e);
		});

		$('#surveyform').bind('input propertychange', function(e) {
			hasChanged = true;
			timer.reset();
			add_to_changed(changed_items, e);
			// console.log( new Date().toString() + ' changed: ');
		});


		var dynamic_params = {
			url: "/survey_answers/json_dynamic_data/" + params['id'] + ".json", 
			method: "GET",
			dataType: 'json',
			parameters: params,
			contentType: "application/json"
		};
        $.ajax(dynamic_params).done(function(data) {
				// console.log("got dynamic data: ");
        		// console.dir(data);
        		onReceivedDynamicData(data);
        		timer.play();
        });

        $('body').delegate('#save_draft', 'click', function() {
        	timer.reset();
        	auto_save(params['id'], changed_items);
        });

        changeAction('surveyform', '/survey_answers/create/' + params['id']);

        initMakeItCount();
    }
});


// 			new Form.Observer('surveyform', set_values_interval, function(element, value) { formParams = value; });
// 			// save values every 60 seconds
// 			new Form.Observer('surveyform', save_interval, function(element, value) {
// 				if(doSave) {
// 					new Ajax.Updater('draft-message', save_draft_url, {asynchronous:true, evalScripts:true, parameters:formParams});
// 				}
// 			});
// 			//]]>
// 		}
// 		get_dynamic_fragments("/survey_answers/dynamic_data", params);
// 		// set form action to this journal_entry
// 		changeAction('surveyform', '/survey_answers/create/' + params['id']);
		
		
// 		$('save_draft').show();
// 	}

// 	$('spinner').hide();

// 	$('save_draft').observe('click', function(el) {
// 		doSave = false;
// 		$('spinner').show();
// 		new Ajax.Updater('draft-message', save_draft_url,
// 				{ asynchronous:true, evalScripts:true, parameters:formParams, onComplete:hideSpinner });
// 			return false;
// 		});
// 		// limit text input in textboxes
// 	initMakeItCount();
// });


// Event.observe(window, 'load', function() {
// 	// updated 05/12 18.07 CET

// 	var doSave = true;
// 	// do not add submit button when it's show only
// 	var doNotCall = document.location.href.match(/show_only/);
// 	var formParams = null;
// 	if(doNotCall == null) {
// 		// var val = /([0-9]+)$/;
// 		//   	var matches = document.location.href.match(val);
// 		var params = {};
// 		// params['id'] = matches[1];
// 		var save_interval = 60;
// 		// if there's no cookie, the id in URL is a journal_entry (else a survey_id), and thus not answered by a login user
// 		var journal_entry = document.cookies().get('journal_entry');
// 		if((typeof(journal_entry) == "undefined")) {
// 			alert("Fejl: Kan ikke hente brugerinformation: ");
// 		}

// 		var save_draft_url = '/survey_answers/save_draft/0';
		
// 		if(!(typeof(journal_entry) == "undefined")) {
// 			params['id'] = journal_entry;

// 			new Ajax.Request("/survey_answers/draft_data/" + params['id'], {
// 			  method: 'post',
// 				parameters: params,
// 				contentType: "text/javascript",
// 				evalJS: true,  // TODO: do not eval, return hash elem -> value
// 			  onSuccess: function(transport) {
// 					eval(transport.responseText);
// 					wFORMS.behaviors['switch'].init();
// 			  }
// 			});

// 			var set_values_interval = 2;
// 			save_draft_url = '/survey_answers/save_draft/' + params['id'];
// 			// set values in params every 5 seconds, so when clicking save_draft, the values can be saved
// 			new Form.Observer('surveyform', set_values_interval, function(element, value) { formParams = value; });
// 			// save values every 60 seconds
// 			new Form.Observer('surveyform', save_interval, function(element, value) {
// 				if(doSave) {
// 					new Ajax.Updater('draft-message', save_draft_url, {asynchronous:true, evalScripts:true, parameters:formParams});
// 				}
// 			});
// 			//]]>
// 		}
// 		get_dynamic_fragments("/survey_answers/dynamic_data", params);
// 		// set form action to this journal_entry
// 		changeAction('surveyform', '/survey_answers/create/' + params['id']);
		
		
// 		$('save_draft').show();
// 	}

// 	$('spinner').hide();

// 	$('save_draft').observe('click', function(el) {
// 		doSave = false;
// 		$('spinner').show();
// 		new Ajax.Updater('draft-message', save_draft_url,
// 				{ asynchronous:true, evalScripts:true, parameters:formParams, onComplete:hideSpinner });
// 			return false;
// 		});
// 		// limit text input in textboxes
// 	initMakeItCount();
// });


</script>
<% end %>
</script>