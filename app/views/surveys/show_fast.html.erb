<div id="survey_header">
	<%= render :partial => 'surveys/survey_header' %>
</div>
<br>

<div id='draft-message' style='color:red;'></div>
<div id="survey_input" class="command"></div>
<br/>

<a href='javascript:toggleComments(surveyform)'>Skriv kommentarer</a>

<% unless @options[:action] =~ /show/ %>
		<form action="/survey_answers/create/0" id="surveyform" method="post" onsubmit="return submitAction;" >
<% end %>

<div>
	<%= render :partial => "surveys/answer_by" %>
</div>
<br>
<%= render :partial => "surveys/question_fast", :collection => @survey.questions %>
<div id="submit_button" style="display:none;">
	<%= render :partial => 'surveys/fancy_submit_button' %>
</div>
</form>

<!-- Put before validation.add -->
<script type='text/javascript'>
	var valid = new Validation('surveyform', {immediate : true, stopOnFirst : true, onFormValidate : setFormStatusInWindow});
</script>

<% unless @options[:action] =~ /show|edit/ && !@options[:show_only] %>
	<%= observe_form "surveyform",
			 :url => survey_save_draft_path(@journal_entry),
			 :update => "draft-message",
			 :frequency => save_draft_interval %>
<% end %>

<p/> <!-- dynamic -->
	<div id="back_button" style="display:none;"></div>

	<script type="text/javascript">
	Event.observe(window, 'load', function() {
		// do not add submit button when it's show only
		var doNotCall = document.location.href.match(/show_only/);
		if(doNotCall == null) {
			var val = /([0-9]+)$/;
	  	var matches = document.location.href.match(val);
			var params = {};
			params['show'] = 'fast';
			params['id'] = matches[1];
			var save_interval = 60;
			// if there's no cookie, the id in URL is a journal_entry (else a survey_id), and thus not answered by a login user
			var journal_entry = document.cookies().get('journal_entry');
			if(!(typeof(journal_entry) == "undefined")) {
				params['id'] = journal_entry;
				// alert("Only for login user: " + params['id']);
				save_interval = 300;
			}
			else { // no save_draft for login users 
				//<![CDATA[
				var save_draft_url = '/survey_answers/save_draft/' + params['id'];
				new Form.Observer('surveyform', save_interval, function(element, value) {new Ajax.Updater('draft-message', save_draft_url, {asynchronous:true, evalScripts:true, parameters:value});});
				//]]>
			}
			get_dynamic_fragments("/survey_answers/dynamic_data", params);
			// get draft data
//			alert("params: " + params.inspect().toString());
			get_draft("/survey_answers/draft_data", params);
	
			// 		  new Ajax.Request(url, {
			// 	parameters: opt,
			// 		    // contentType: "text/javascript",
			// 		    // evalJS: true,
			//   onSuccess: function(transport) { eval(transport.responseText); }
			// });
			
			// new Ajax.Request("/survey_answers/draft_data/" + params['id'], {
			//   method: 'post',
			// 	parameters: params,
			// 	contentType: "text/javascript",
			// 	evalJS: true,
			//   onSuccess: function(transport) {
			// 		eval(transport.responseText);
			// 		// alert("Yes, I did it!");
			//   }
			// });

			// set form action to this journal_entry
			changeAction('surveyform', '/survey_answers/create/' + params['id']);//matches[1]);
		}
	});
	</script>
	
<div id="debug">
</div>